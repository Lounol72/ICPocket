name: Documentation by Doxygen

on:
  schedule:
    - cron: '0 22 * * *'
  workflow_dispatch:

permissions:
  contents: write
  actions: write

env:
  BUILD_TYPE: Release
  PROJECT_NAME: ICPocket

jobs:
  build:
    runs-on: ubuntu-latest

    steps: 
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: false
          submodules: recursive
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Skip LFS setup
        run: |
          git config lfs.fetchexclude "*"

      - name: Verify submodules
        if: env.HAS_COMMITS == 'true'
        run: |
          echo "==== VÃ©rification des submodules ===="
          git submodule status
          ls -la */doxygen-awesome* || echo "Submodule doxygen-awesome non trouvÃ©"

      - name: Check for today's commits
        id: check_commits
        shell: bash
        run: |
          TODAY=$(date -u +%Y-%m-%d)
          COMMITS_TODAY=$(git log --since="$TODAY 00:00:00" --until="$TODAY 23:59:59" --oneline)
          if [ -n "$COMMITS_TODAY" ]; then
            echo "HAS_COMMITS=true" >> $GITHUB_ENV
          else
            echo "HAS_COMMITS=false" >> $GITHUB_ENV
          fi

      - name: Install Dependencies
        if: env.HAS_COMMITS == 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y doxygen graphviz make 

      - name: Generate Documentation
        if: env.HAS_COMMITS == 'true'
        run: |
          ls -l doxygen-awesome-css/doxygen-custom/header.html
          
          
          make doxygen DOXYFILE_PATH=$(pwd)/Doxyfile
          
          

      - name: Commit and Push Documentation
        if: env.HAS_COMMITS == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          # Ajouter tous les fichiers modifiÃ©s dans docs
          git add *
          
          # VÃ©rifier s'il y a des changements Ã  commiter
          if git diff --staged --quiet; then
            echo "Aucun changement dans la documentation"
            exit 0
          else
            git commit -m "ðŸ“š Documentation update $(date -u +%Y-%m-%d)"
            git push origin main
          fi

      - name: Upload Documentation Artifact
        if: env.HAS_COMMITS == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: documentation
          path: docs/html
          retention-days: 5

      - name: Cleanup
        if: always()
        run: |
          rm -rf docs/html

      - name: Debug file structure
        if: env.HAS_COMMITS == 'true'
        run: |
          pwd
          ls -la
          find . -name "*.css" | grep -i style
          cat Doxyfile | grep HTML_EXTRA
          
          