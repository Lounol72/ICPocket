name: Update GitHub Data

on:
  schedule:
    - cron: '0 */6 * * 1-5'  # Toutes les 6 heures
  workflow_dispatch:

jobs:
  update_data:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Install jq
        run: sudo apt-get install jq -y
      
      - name: Create data directory
        run: mkdir -p docs/data
      
      - name: Fetch GitHub Data
        run: |
          # Repo info - filtrer les donnÃ©es sensibles
          curl -s -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }} | \
            jq 'del(.private_key, .ssh_url) | {name, description, html_url, homepage, language, stargazers_count, watchers_count, forks_count, open_issues_count, default_branch, created_at, updated_at, topics}' > docs/data/repo.json
          
          # Contributors - ne garder que les noms publics et le nombre de contributions
          curl -s -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/contributors | \
            jq 'map({login, avatar_url, html_url, contributions})' > docs/data/contributors.json
          
          # Releases - inclure les assets mais filtrer les donnÃ©es sensibles
          curl -s -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/releases | \
            jq 'map({
              name, 
              tag_name, 
              published_at, 
              html_url, 
              body,
              assets: [.assets[] | {
                name,
                size,
                download_count,
                browser_download_url
              }]
            })' > docs/data/releases.json
          
          # Commits - filtrer et anonymiser les donnÃ©es sensibles
          curl -s -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/commits | \
            jq 'map({sha: .sha[0:8], message: .commit.message | split("\n")[0], date: .commit.author.date, author: {name: .commit.author.name, username: .author.login}, url: .html_url})' > docs/data/commits.json
          
          # Metadata
          echo "{\"last_updated\":\"$(date -u +"%Y-%m-%dT%H:%M:%SZ")\"}" > docs/data/metadata.json
      
      - name: Commit and push if changed
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add docs/data/
          git diff --staged --quiet || (git commit -m "ðŸ“Š Update GitHub data" && git push) 