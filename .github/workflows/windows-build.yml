name: Windows Build at Midnight

on:
  schedule:
    - cron: '0 0 * * *'  # Exécution tous les jours à minuit UTC
  workflow_dispatch:

permissions:
  contents: write  # Permet de modifier le contenu du dépôt, y compris les commits
  actions: write   # Permet à GitHub Actions de créer des releases et de modifier les artefacts

env:
  BUILD_TYPE: Commit & push
  PROJECT_NAME: ICPocket

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Check if commits were made today
      id: check_commits
      run: |
        # Obtenir la date actuelle en format ISO (ex: 2025-03-18)
        TODAY=$(date --utc +%Y-%m-%d)
        
        # Vérifier si des commits ont été faits aujourd'hui
        COMMITS_TODAY=$(git log --since="${TODAY}T00:00:00Z" --until="${TODAY}T23:59:59Z" --oneline)
        
        if [ -z "$COMMITS_TODAY" ]; then
          echo "Aucun commit trouvé aujourd'hui. Le workflow ne sera pas exécuté."
          exit 0
        else
          echo "Des commits ont été effectués aujourd'hui. Continuer avec le build."
        fi

    - name: Setup MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: |
          mingw-w64-x86_64-gcc=10.3.0-1
          mingw-w64-x86_64-SDL2=2.0.14-2
          mingw-w64-x86_64-SDL2_image=2.0.5-1
          mingw-w64-x86_64-SDL2_mixer=2.0.4-1
          mingw-w64-x86_64-SDL2_ttf=2.0.15-1
          zip
          make

    - name: Cache MSYS2 packages
      uses: actions/cache@v4
      with:
        path: C:\msys64\var\cache\pacman\pkg
        key: ${{ runner.os }}-msys2-${{ hashFiles('**/workflow.yml') }}-${{ hashFiles('C:/msys64/etc/pacman.d/mirrorlist.*') }}
        restore-keys: |
          ${{ runner.os }}-msys2-

    - name: Build Project
      shell: msys2 {0}
      run: |
        mkdir -p bin/windows
        make package-windows || {
          echo "Compilation directe avec GCC..."
          gcc -o bin/windows/${{ env.PROJECT_NAME }}.exe \
            main.c src/*.c \
            -I./include \
            -I/mingw64/include/SDL2 \
            -L/mingw64/lib \
            -lmingw32 -lSDL2main -lSDL2 -lSDL2_image -lSDL2_mixer -lSDL2_ttf \
            -mwindows \
            -O2 || { echo "GCC compilation failed"; exit 1; }
        }

    - name: Package Dependencies
      shell: msys2 {0}
      run: |
        DLLS=("SDL2.dll" "SDL2_image.dll" "SDL2_mixer.dll" "SDL2_ttf.dll" "libpng16-16.dll" "zlib1.dll" "libjpeg-8.dll" "libfreetype-6.dll")
        
        for dll in "${DLLS[@]}"; do
          cp -v "/mingw64/bin/$dll" bin/windows/
        done
        
        cat > bin/windows/launch.bat << EOF
        @echo off
        cd %~dp0
        start ${{ env.PROJECT_NAME }}.exe %*
        EOF
        
        cd bin
        zip -r ../${{ env.PROJECT_NAME }}-windows.zip windows/ ../assets/ ../data/ ../README.md
        cd ..

    - name: Commit and Push ZIP
      shell: bash
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        
        git add ${{ env.PROJECT_NAME }}-windows.zip
        git commit -m "Add Windows build ZIP for commit ${{ github.sha }} on ${{ github.ref_name }}"
        
        # Utiliser le GITHUB_TOKEN pour effectuer le push
        git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} HEAD:${{ github.ref_name }}

    - name: Cleanup
      if: always()
      shell: msys2 {0}
      run: |
        rm -rf bin/
        rm -f *.zip
